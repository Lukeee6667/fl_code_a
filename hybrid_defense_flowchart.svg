<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font: bold 16px Arial; text-anchor: middle; fill: #2c3e50; }
      .box { fill: #ecf0f1; stroke: #34495e; stroke-width: 2; rx: 8; ry: 8; }
      .decision { fill: #f39c12; stroke: #e67e22; stroke-width: 2; }
      .process { fill: #3498db; stroke: #2980b9; stroke-width: 2; }
      .result { fill: #2ecc71; stroke: #27ae60; stroke-width: 2; }
      .exclude { fill: #e74c3c; stroke: #c0392b; stroke-width: 2; }
      .text { font: 12px Arial; text-anchor: middle; fill: #2c3e50; }
      .small-text { font: 10px Arial; text-anchor: middle; fill: #34495e; }
      .arrow { stroke: #34495e; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="400" y="25" class="title">AlignIns-FedUP混合防御方法流程图</text>
  
  <!-- Input -->
  <rect x="320" y="50" width="160" height="40" class="box"/>
  <text x="400" y="75" class="text">客户端更新集合</text>
  
  <!-- Stage 1: Multi-metric Detection -->
  <rect x="280" y="110" width="240" height="50" class="process"/>
  <text x="400" y="130" class="text">第一阶段：AlignIns多指标检测</text>
  <text x="400" y="145" class="small-text">计算MPSA、TDA、梯度范数、平均余弦相似度</text>
  
  <!-- Layer 1: Strict Detection -->
  <rect x="50" y="190" width="180" height="60" class="decision"/>
  <text x="140" y="210" class="text">第一层：严格阈值检测</text>
  <text x="140" y="225" class="small-text">所有指标 < 0.8×原阈值？</text>
  <text x="140" y="240" class="small-text">识别明确良性客户端</text>
  
  <!-- Layer 2: Loose Detection -->
  <rect x="310" y="190" width="180" height="60" class="decision"/>
  <text x="400" y="210" class="text">第二层：标准阈值检测</text>
  <text x="400" y="225" class="small-text">任意指标 > 1.0×原阈值？</text>
  <text x="400" y="240" class="small-text">识别明确恶意客户端</text>
  
  <!-- Layer 3: Suspicious -->
  <rect x="570" y="190" width="180" height="60" class="decision"/>
  <text x="660" y="210" class="text">第三层：可疑客户端</text>
  <text x="660" y="225" class="small-text">介于两个阈值之间</text>
  <text x="660" y="240" class="small-text">需要进一步处理</text>
  
  <!-- Benign Result -->
  <rect x="50" y="280" width="180" height="50" class="result"/>
  <text x="140" y="300" class="text">明确良性客户端</text>
  <text x="140" y="315" class="small-text">权重 = 1.0，直接聚合</text>
  
  <!-- Malicious Result -->
  <rect x="310" y="280" width="180" height="50" class="exclude"/>
  <text x="400" y="300" class="text">明确恶意客户端</text>
  <text x="400" y="315" class="small-text">权重 = 0，完全排除</text>
  
  <!-- Stage 2: FedUP Pruning -->
  <rect x="570" y="280" width="180" height="80" class="process"/>
  <text x="660" y="300" class="text">第二阶段：FedUP剪枝</text>
  <text x="660" y="315" class="small-text">计算可疑程度评分</text>
  <text x="660" y="330" class="small-text">个性化剪枝比例</text>
  <text x="660" y="345" class="small-text">权重重要性剪枝</text>
  
  <!-- Pruned Result -->
  <rect x="570" y="390" width="180" height="50" class="result"/>
  <text x="660" y="410" class="text">剪枝后可疑客户端</text>
  <text x="660" y="425" class="small-text">权重 = 0.1-0.6，降权聚合</text>
  
  <!-- Stage 3: Intelligent Aggregation -->
  <rect x="280" y="470" width="240" height="60" class="process"/>
  <text x="400" y="490" class="text">第三阶段：智能加权聚合</text>
  <text x="400" y="505" class="small-text">自适应范数裁剪 + 加权平均</text>
  <text x="400" y="520" class="small-text">生成最终全局模型更新</text>
  
  <!-- Final Result -->
  <rect x="320" y="550" width="160" height="40" class="result"/>
  <text x="400" y="575" class="text">聚合后的全局更新</text>
  
  <!-- Arrows -->
  <line x1="400" y1="90" x2="400" y2="110" class="arrow"/>
  <line x1="400" y1="160" x2="140" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="400" y2="190" class="arrow"/>
  <line x1="400" y1="160" x2="660" y2="190" class="arrow"/>
  
  <line x1="140" y1="250" x2="140" y2="280" class="arrow"/>
  <line x1="400" y1="250" x2="400" y2="280" class="arrow"/>
  <line x1="660" y1="250" x2="660" y2="280" class="arrow"/>
  
  <line x1="660" y1="360" x2="660" y2="390" class="arrow"/>
  
  <line x1="140" y1="330" x2="400" y2="470" class="arrow"/>
  <line x1="660" y1="440" x2="400" y2="470" class="arrow"/>
  
  <line x1="400" y1="530" x2="400" y2="550" class="arrow"/>
  
</svg>